#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<project name="generate-sql" default="main">
	<target name="-check-dev-has-files">
		<condition property="sql.dev.files.exists" else="false">
			<resourcecount when="greater" count="0">
				<fileset dir="${symbol_dollar}{sql.dir.new}">
					<include name="**/*.sql" />
				</fileset>
			</resourcecount>
		</condition>
	</target>
	<target name="-check-still-dev-has-files">
		<condition property="sql.dev.files.exists.again" else="false">
			<resourcecount when="greater" count="0">
				<fileset dir="${symbol_dollar}{sql.dir.new}">
					<include name="**/*.sql" />
				</fileset>
			</resourcecount>
		</condition>
	</target>
	<target name="-check-upgrade-file-exists">
		<available file="${symbol_dollar}{sql.dir.version}/99999999.sql" property="sql.upgrade.file.exists" />
	</target>
	<target name="create-sql-upgrade-file" depends="-check-upgrade-file-exists" unless="${symbol_dollar}{sql.upgrade.file.exists}">
		<echo file="${symbol_dollar}{sql.dir.version}/99999999.sql">
			INSERT INTO schema_versions (version, timestamp) VALUES ('${symbol_dollar}{project.version}', CURRENT_TIMESTAMP);
		</echo>
	</target>
	<target name="fail-if-files-left-back" depends="-check-still-dev-has-files" if="${symbol_dollar}{sql.dev.files.exists.again}">
		<fail message="files left back at DEVELOPMENT, please check it out" />
	</target>
	<target name="main" depends="-check-dev-has-files" if="${symbol_dollar}{sql.dev.files.exists}">
		<mkdir dir="${symbol_dollar}{sql.dir.version}" />
		<move todir="${symbol_dollar}{sql.dir.version}" overwrite="false">
			<fileset dir="${symbol_dollar}{sql.dir.new}" includes="**/*.sql">
				<present targetdir="${symbol_dollar}{sql.dir.version}" present="srconly" />
			</fileset>
		</move>
		<antcall target="fail-if-files-left-back" />
		<antcall target="create-sql-upgrade-file" />
	</target>
</project>